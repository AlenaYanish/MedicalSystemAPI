/*
 * Medical System API
 * API для управління лікарями та записами на прийом у медичній системі.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.68
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MedicalSystemApi);
  }
}(this, function(expect, MedicalSystemApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Appointment', function() {
      beforeEach(function() {
        instance = new MedicalSystemApi.Appointment();
      });

      it('should create an instance of Appointment', function() {
        // TODO: update the code to test Appointment
        expect(instance).to.be.a(MedicalSystemApi.Appointment);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property doctorId (base name: "doctor_id")', function() {
        // TODO: update the code to test the property doctorId
        expect(instance).to.have.property('doctorId');
        // expect(instance.doctorId).to.be(expectedValueLiteral);
      });

      it('should have the property patientId (base name: "patient_id")', function() {
        // TODO: update the code to test the property patientId
        expect(instance).to.have.property('patientId');
        // expect(instance.patientId).to.be(expectedValueLiteral);
      });

      it('should have the property appointmentDatetime (base name: "appointment_datetime")', function() {
        // TODO: update the code to test the property appointmentDatetime
        expect(instance).to.have.property('appointmentDatetime');
        // expect(instance.appointmentDatetime).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

      it('should have the property reason (base name: "reason")', function() {
        // TODO: update the code to test the property reason
        expect(instance).to.have.property('reason');
        // expect(instance.reason).to.be(expectedValueLiteral);
      });

      it('should have the property diagnosis (base name: "diagnosis")', function() {
        // TODO: update the code to test the property diagnosis
        expect(instance).to.have.property('diagnosis');
        // expect(instance.diagnosis).to.be(expectedValueLiteral);
      });

    });
  });

}));
