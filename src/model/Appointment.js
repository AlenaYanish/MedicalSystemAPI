/*
 * Medical System API
 * API для управління лікарями та записами на прийом у медичній системі.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.68
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The Appointment model module.
 * @module model/Appointment
 * @version 1.0.0
 */
export default class Appointment {
  /**
   * Constructs a new <code>Appointment</code>.
   * @alias module:model/Appointment
   * @class
   * @param doctorId {Number} Ідентифікатор лікаря
   * @param patientId {Number} Ідентифікатор пацієнта
   * @param appointmentDatetime {Date} Дата та час прийому (YYYY-MM-DDTHH:mm:ssZ)
   */
  constructor(doctorId, patientId, appointmentDatetime) {
    this.doctorId = doctorId;
    this.patientId = patientId;
    this.appointmentDatetime = appointmentDatetime;
  }

  /**
   * Constructs a <code>Appointment</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Appointment} obj Optional instance to populate.
   * @return {module:model/Appointment} The populated <code>Appointment</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Appointment();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('doctor_id'))
        obj.doctorId = ApiClient.convertToType(data['doctor_id'], 'Number');
      if (data.hasOwnProperty('patient_id'))
        obj.patientId = ApiClient.convertToType(data['patient_id'], 'Number');
      if (data.hasOwnProperty('appointment_datetime'))
        obj.appointmentDatetime = ApiClient.convertToType(data['appointment_datetime'], 'Date');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('reason'))
        obj.reason = ApiClient.convertToType(data['reason'], 'String');
      if (data.hasOwnProperty('diagnosis'))
        obj.diagnosis = ApiClient.convertToType(data['diagnosis'], 'String');
    }
    return obj;
  }
}

/**
 * Унікальний ідентифікатор запису
 * @member {Number} id
 */
Appointment.prototype.id = undefined;

/**
 * Ідентифікатор лікаря
 * @member {Number} doctorId
 */
Appointment.prototype.doctorId = undefined;

/**
 * Ідентифікатор пацієнта
 * @member {Number} patientId
 */
Appointment.prototype.patientId = undefined;

/**
 * Дата та час прийому (YYYY-MM-DDTHH:mm:ssZ)
 * @member {Date} appointmentDatetime
 */
Appointment.prototype.appointmentDatetime = undefined;

/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Appointment.StatusEnum = {
  /**
   * value: "scheduled"
   * @const
   */
  scheduled: "scheduled",

  /**
   * value: "completed"
   * @const
   */
  completed: "completed",

  /**
   * value: "cancelled"
   * @const
   */
  cancelled: "cancelled"
};
/**
 * Статус запису
 * @member {module:model/Appointment.StatusEnum} status
 * @default 'scheduled'
 */
Appointment.prototype.status = 'scheduled';

/**
 * Причина звернення
 * @member {String} reason
 */
Appointment.prototype.reason = undefined;

/**
 * Попередній або остаточний діагноз
 * @member {String} diagnosis
 */
Appointment.prototype.diagnosis = undefined;

